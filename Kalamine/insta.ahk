; Generated by kalamine on 2024-04-29

#NoEnv
#Persistent
#InstallKeybdHook
#SingleInstance,       force
#MaxThreadsBuffer
#MaxThreadsPerHotKey   3
#MaxHotkeysPerInterval 300
#MaxThreads            20

SendMode Event ; either Event or Input
SetKeyDelay,   -1
SetBatchLines, -1
Process, Priority, , R
SetWorkingDir, %A_ScriptDir%
StringCaseSense, On


;-------------------------------------------------------------------------------
; On/Off Switch
;-------------------------------------------------------------------------------

global Active := True

HideTrayTip() {
  TrayTip  ; Attempt to hide it the normal way.
  if SubStr(A_OSVersion,1,3) = "10." {
    Menu Tray, NoIcon
    Sleep 200  ; It may be necessary to adjust this sleep.
    Menu Tray, Icon
  }
}

ShowTrayTip() {
  title := "Insta"
  text := Active ? "ON" : "OFF"
  HideTrayTip()
  TrayTip, %title% , %text%, 1, 0x31
  SetTimer, HideTrayTip, -1500
}

RAlt & Alt::
Alt & RAlt::
  global Active
  Active := !Active
  ShowTrayTip()
  return

#If Active
SetTimer, ShowTrayTip, -1000  ; not working


;-------------------------------------------------------------------------------
; DeadKey Helpers
;-------------------------------------------------------------------------------

global DeadKey := ""

; Check CapsLock status, upper the char if needed and send the char
SendChar(char) {
  if % GetKeyState("CapsLock", "T") {
    if (StrLen(char) == 6) {
      ; we have something in the form of `U+NNNN `
      ; Change it to 0xNNNN so it can be passed to `Chr` function
      char := Chr("0x" SubStr(char, 3, 4))
    }
    StringUpper, char, char
  }
  Send, {%char%}
}

DoTerm(base:="") {
  global DeadKey

  term := SubStr(DeadKey, 2, 1)

  Send, {%term%}
  SendChar(base)
  DeadKey := ""
}

DoAction(action:="") {
  global DeadKey

  if (action == "U+0020") {
    Send, {SC39}
    DeadKey := ""
  }
  else if (StrLen(action) != 2) {
    SendChar(action)
    DeadKey := ""
  }
  else if (action == DeadKey) {
    DoTerm(SubStr(DeadKey, 2, 1))
  }
  else {
    DeadKey := action
  }
}

SendKey(base, deadkeymap) {
  if (!DeadKey) {
    DoAction(base)
  }
  else if (deadkeymap.HasKey(DeadKey)) {
    DoAction(deadkeymap[DeadKey])
  }
  else {
    DoTerm(base)
  }
}


;-------------------------------------------------------------------------------
; Base
;-------------------------------------------------------------------------------

;  Digits

 SC02::SendKey("U+0031", {"**": "U+201e", "*^": "U+00b9"}) ; 1
+SC02::SendKey("U+20ac", {}) ; €

 SC03::SendKey("U+0032", {"**": "U+201c", "*^": "U+00b2"}) ; 2
+SC03::SendKey("U+0040", {"**": "U+2018"}) ; @

 SC04::SendKey("U+0033", {"**": "U+201d", "*^": "U+00b3"}) ; 3
+SC04::SendKey("U+0023", {"**": "U+2019"}) ; #

 SC05::SendKey("U+0034", {"**": "U+00a2", "*^": "U+2074"}) ; 4
+SC05::SendKey("U+0024", {}) ; $

 SC06::SendKey("U+0035", {"**": "U+00a3", "*^": "U+2075"}) ; 5
+SC06::SendKey("U+0025", {"**": "U+2030"}) ; %

 SC07::SendKey("U+0036", {"**": "U+00a5", "*^": "U+2076"}) ; 6
+SC07::SendKey("U+005e", {}) ; ^

 SC08::SendKey("U+0037", {"**": "U+00a4", "*^": "U+2077"}) ; 7
+SC08::SendKey("U+0026", {}) ; &

 SC09::SendKey("U+0038", {"**": "U+00a7", "*^": "U+2078"}) ; 8
+SC09::SendKey("U+002a", {}) ; *

 SC0a::SendKey("U+0039", {"**": "U+00b6", "*^": "U+2079"}) ; 9
+SC0a::SendKey("U+00ab", {"**": "U+2039"}) ; «

 SC0b::SendKey("U+0030", {"**": "U+00b0", "*^": "U+2070"}) ; 0
+SC0b::SendKey("U+00bb", {"**": "U+203a"}) ; »

;  Letters, first row

 SC10::SendKey("U+0071", {"**": "U+00e6", "*µ": "U+03c7"}) ; q
+SC10::SendKey("U+0051", {"**": "U+00c6", "*µ": "U+03a7"}) ; Q

 SC11::SendKey("U+0077", {"**": "U+00e9", "*``": "U+1e81", "*´": "U+1e83", "*^": "U+0175", "*¨": "U+1e85", "*µ": "U+03c9"}) ; w
+SC11::SendKey("U+0057", {"**": "U+00c9", "*``": "U+1e80", "*´": "U+1e82", "*^": "U+0174", "*¨": "U+1e84", "*µ": "U+03a9"}) ; W

 SC12::SendKey("U+0065", {"**": "U+00e8", "*``": "U+00e8", "*´": "U+00e9", "*^": "U+00ea", "*~": "U+1ebd", "*¨": "U+00eb", "*¸": "U+0229", "*µ": "U+03b5"}) ; e
+SC12::SendKey("U+0045", {"**": "U+00c8", "*``": "U+00c8", "*´": "U+00c9", "*^": "U+00ca", "*~": "U+1ebc", "*¨": "U+00cb", "*¸": "U+0228", "*µ": "U+0395"}) ; E

 SC13::SendKey("U+0072", {"**": "U+00eb", "*´": "U+0155", "*¸": "U+0157", "*µ": "U+03c1"}) ; r
+SC13::SendKey("U+0052", {"**": "U+00cb", "*´": "U+0154", "*¸": "U+0156", "*µ": "U+03a1"}) ; R

 SC14::SendKey("U+0074", {"**": "U+2011", "*¨": "U+1e97", "*¸": "U+0163", "*µ": "U+03c4"}) ; t
+SC14::SendKey("U+0054", {"*¸": "U+0162", "*µ": "U+03a4"}) ; T

 SC15::SendKey("U+0079", {"**": "U+00fc", "*``": "U+1ef3", "*´": "U+00fd", "*^": "U+0177", "*~": "U+1ef9", "*¨": "U+00ff", "*µ": "U+03c8"}) ; y
+SC15::SendKey("U+0059", {"**": "U+00dc", "*``": "U+1ef2", "*´": "U+00dd", "*^": "U+0176", "*~": "U+1ef8", "*¨": "U+0178", "*µ": "U+03a8"}) ; Y

 SC16::SendKey("U+0075", {"**": "U+00f9", "*``": "U+00f9", "*´": "U+00fa", "*^": "U+00fb", "*~": "U+0169", "*¨": "U+00fc", "*µ": "U+03c5"}) ; u
+SC16::SendKey("U+0055", {"**": "U+00d9", "*``": "U+00d9", "*´": "U+00da", "*^": "U+00db", "*~": "U+0168", "*¨": "U+00dc", "*µ": "U+03a5"}) ; U

 SC17::SendKey("U+0069", {"**": "U+00ef", "*``": "U+00ec", "*´": "U+00ed", "*^": "U+00ee", "*~": "U+0129", "*¨": "U+00ef", "*µ": "U+03b9"}) ; i
+SC17::SendKey("U+0049", {"**": "U+00cf", "*``": "U+00cc", "*´": "U+00cd", "*^": "U+00ce", "*~": "U+0128", "*¨": "U+00cf", "*µ": "U+0399"}) ; I

 SC18::SendKey("U+006f", {"**": "U+0153", "*``": "U+00f2", "*´": "U+00f3", "*^": "U+00f4", "*~": "U+00f5", "*¨": "U+00f6", "*µ": "U+03bf"}) ; o
+SC18::SendKey("U+004f", {"**": "U+0152", "*``": "U+00d2", "*´": "U+00d3", "*^": "U+00d4", "*~": "U+00d5", "*¨": "U+00d6", "*µ": "U+039f"}) ; O

 SC19::SendKey("U+0070", {"*´": "U+1e55", "*µ": "U+03c0"}) ; p
+SC19::SendKey("U+0050", {"*´": "U+1e54", "*µ": "U+03a0"}) ; P

;  Letters, second row

 SC1e::SendKey("U+0061", {"**": "U+00e0", "*``": "U+00e0", "*´": "U+00e1", "*^": "U+00e2", "*~": "U+00e3", "*¨": "U+00e4", "*µ": "U+03b1"}) ; a
+SC1e::SendKey("U+0041", {"**": "U+00c0", "*``": "U+00c0", "*´": "U+00c1", "*^": "U+00c2", "*~": "U+00c3", "*¨": "U+00c4", "*µ": "U+0391"}) ; A

 SC1f::SendKey("U+0073", {"**": "U+00df", "*´": "U+015b", "*^": "U+015d", "*¸": "U+015f", "*µ": "U+03c3"}) ; s
+SC1f::SendKey("U+0053", {"**": "U+1e9e", "*´": "U+015a", "*^": "U+015c", "*¸": "U+015e", "*µ": "U+03a3"}) ; S

 SC20::SendKey("U+0064", {"**": "U+00ea", "*¸": "U+1e11", "*µ": "U+03b4"}) ; d
+SC20::SendKey("U+0044", {"**": "U+00ca", "*¸": "U+1e10", "*µ": "U+0394"}) ; D

 SC21::SendKey("U+0066", {"**": "U+002d", "*µ": "U+03c6"}) ; f
+SC21::SendKey("U+0046", {"**": "U+00aa", "*µ": "U+03a6"}) ; F

 SC22::SendKey("U+0067", {"**": "U+2013", "*´": "U+01f5", "*^": "U+011d", "*¸": "U+0123", "*µ": "U+03b3"}) ; g
+SC22::SendKey("U+0047", {"*´": "U+01f4", "*^": "U+011c", "*¸": "U+0122", "*µ": "U+0393"}) ; G

 SC23::SendKey("U+0068", {"**": "U+0177", "*^": "U+0125", "*¨": "U+1e27", "*¸": "U+1e29", "*µ": "U+03b7"}) ; h
+SC23::SendKey("U+0048", {"**": "U+0176", "*^": "U+0124", "*¨": "U+1e26", "*¸": "U+1e28", "*µ": "U+0397"}) ; H

 SC24::SendKey("U+006a", {"**": "U+00fb", "*^": "U+0135", "*µ": "U+03b8"}) ; j
+SC24::SendKey("U+004a", {"**": "U+00db", "*^": "U+0134", "*µ": "U+0398"}) ; J

 SC25::SendKey("U+006b", {"**": "U+00ee", "*´": "U+1e31", "*¸": "U+0137", "*µ": "U+03ba"}) ; k
+SC25::SendKey("U+004b", {"**": "U+00ce", "*´": "U+1e30", "*¸": "U+0136", "*µ": "U+039a"}) ; K

 SC26::SendKey("U+006c", {"**": "U+00f4", "*´": "U+013a", "*¸": "U+013c", "*µ": "U+03bb"}) ; l
+SC26::SendKey("U+004c", {"**": "U+00d4", "*´": "U+0139", "*¸": "U+013b", "*µ": "U+039b"}) ; L

 SC27::SendKey("**", {"**": "*¨"})
+SC27::SendKey("U+0021", {"**": "U+00a1"}) ; !

;  Letters, third row

 SC2c::SendKey("U+007a", {"**": "U+00e2", "*´": "U+017a", "*^": "U+1e91", "*µ": "U+03b6"}) ; z
+SC2c::SendKey("U+005a", {"**": "U+00c2", "*´": "U+0179", "*^": "U+1e90", "*µ": "U+0396"}) ; Z

 SC2d::SendKey("U+0078", {"**": "U+00d7", "*¨": "U+1e8d", "*µ": "U+03be"}) ; x
+SC2d::SendKey("U+0058", {"*¨": "U+1e8c", "*µ": "U+039e"}) ; X

 SC2e::SendKey("U+0063", {"**": "U+00e7", "*´": "U+0107", "*^": "U+0109", "*¸": "U+00e7"}) ; c
+SC2e::SendKey("U+0043", {"**": "U+00c7", "*´": "U+0106", "*^": "U+0108", "*¸": "U+00c7"}) ; C

 SC2f::SendKey("U+0076", {"**": "U+005f", "*~": "U+1e7d"}) ; v
+SC2f::SendKey("U+0056", {"*~": "U+1e7c"}) ; V

 SC30::SendKey("U+0062", {"**": "U+2014", "*µ": "U+03b2"}) ; b
+SC30::SendKey("U+0042", {"*µ": "U+0392"}) ; B

 SC31::SendKey("U+006e", {"**": "U+00f1", "*``": "U+01f9", "*´": "U+0144", "*~": "U+00f1", "*¸": "U+0146", "*µ": "U+03bd"}) ; n
+SC31::SendKey("U+004e", {"**": "U+00d1", "*``": "U+01f8", "*´": "U+0143", "*~": "U+00d1", "*¸": "U+0145", "*µ": "U+039d"}) ; N

 SC32::SendKey("U+006d", {"**": "U+00b5", "*´": "U+1e3f", "*µ": "U+03bc"}) ; m
+SC32::SendKey("U+004d", {"**": "U+00ba", "*´": "U+1e3e", "*µ": "U+039c"}) ; M

 SC33::SendKey("U+002c", {"**": "U+00b7"}) ; ,
+SC33::SendKey("U+003b", {"**": "U+2022"}) ; ;

 SC34::SendKey("U+002e", {"**": "U+2026"}) ; .
+SC34::SendKey("U+003a", {}) ; :

 SC35::SendKey("U+002f", {"**": "U+00f7"}) ; /
+SC35::SendKey("U+003f", {"**": "U+00bf"}) ; ?

;  Pinky keys

 SC0c::SendKey("U+002d", {"**": "U+2014", "*^": "U+207b"}) ; -
+SC0c::SendKey("U+005f", {}) ; _

 SC0d::SendKey("U+003d", {"**": "U+2260", "*^": "U+207c", "*~": "U+2243"}) ; =
+SC0d::SendKey("U+002b", {"**": "U+00b1", "*^": "U+207a"}) ; +

 SC1a::SendKey("U+005b", {}) ; [
+SC1a::SendKey("U+007b", {}) ; {

 SC1b::SendKey("U+005d", {}) ; ]
+SC1b::SendKey("U+007d", {}) ; }

 SC28::SendKey("U+0027", {}) ; '
+SC28::SendKey("U+0022", {}) ; "

 SC29::SendKey("U+0060", {}) ; `
+SC29::SendKey("U+007e", {}) ; ~

 SC2b::SendKey("U+005c", {}) ; \
+SC2b::SendKey("U+007c", {}) ; |

 SC56::SendKey("U+003c", {"*~": "U+2272"}) ; <
+SC56::SendKey("U+003e", {"*~": "U+2273"}) ; >

;  Space bar

 SC39::SendKey("U+0020", {"**": "U+2019", "*``": "U+0060", "*´": "U+0027", "*^": "U+005e", "*~": "U+007e", "*¨": "U+0022", "*¸": "U+00b8", "*µ": "U+00b5"}) ;  
+SC39::SendKey("U+202f", {"**": "U+2019", "*``": "U+0060", "*´": "U+0027", "*^": "U+005e", "*~": "U+007e", "*¨": "U+0022", "*¸": "U+00b8", "*µ": "U+00b5"}) ;  


;-------------------------------------------------------------------------------
; AltGr
;-------------------------------------------------------------------------------

;  Digits

 <^>!SC02::SendKey("U+2081", {}) ; ₁
<^>!+SC02::SendKey("U+00b9", {}) ; ¹

 <^>!SC03::SendKey("U+2082", {}) ; ₂
<^>!+SC03::SendKey("U+00b2", {}) ; ²

 <^>!SC04::SendKey("U+2083", {}) ; ₃
<^>!+SC04::SendKey("U+00b3", {}) ; ³

 <^>!SC05::SendKey("U+2084", {}) ; ₄
<^>!+SC05::SendKey("U+2074", {}) ; ⁴

 <^>!SC06::SendKey("U+2085", {}) ; ₅
<^>!+SC06::SendKey("U+2075", {}) ; ⁵

 <^>!SC07::SendKey("U+2086", {}) ; ₆
<^>!+SC07::SendKey("U+2076", {}) ; ⁶

 <^>!SC08::SendKey("U+2087", {}) ; ₇
<^>!+SC08::SendKey("U+2077", {}) ; ⁷

 <^>!SC09::SendKey("U+2088", {}) ; ₈
<^>!+SC09::SendKey("U+2078", {}) ; ⁸

 <^>!SC0a::SendKey("U+2089", {}) ; ₉
<^>!+SC0a::SendKey("U+2079", {}) ; ⁹

 <^>!SC0b::SendKey("U+2080", {}) ; ₀
<^>!+SC0b::SendKey("U+2070", {}) ; ⁰

;  Letters, first row

 <^>!SC10::SendKey("U+0040", {"**": "U+2018"}) ; @

 <^>!SC11::SendKey("U+003c", {"*~": "U+2272"}) ; <
<^>!+SC11::SendKey("U+2264", {}) ; ≤

 <^>!SC12::SendKey("U+003e", {"*~": "U+2273"}) ; >
<^>!+SC12::SendKey("U+2265", {}) ; ≥

 <^>!SC13::SendKey("U+0024", {}) ; $

 <^>!SC14::SendKey("U+0025", {"**": "U+2030"}) ; %
<^>!+SC14::SendKey("U+2030", {}) ; ‰

 <^>!SC15::SendKey("U+005e", {}) ; ^
<^>!+SC15::SendKey("*^", {"*^": "^"})

 <^>!SC16::SendKey("U+0026", {}) ; &
<^>!+SC16::SendKey("*µ", {"*µ": "µ"})

 <^>!SC17::SendKey("U+002a", {}) ; *
<^>!+SC17::SendKey("U+00d7", {}) ; ×

 <^>!SC18::SendKey("U+0027", {}) ; '
<^>!+SC18::SendKey("*´", {"*´": "´"})

 <^>!SC19::SendKey("U+0060", {}) ; `
<^>!+SC19::SendKey("*``", {"*``": "`"}) ; *`

;  Letters, second row

 <^>!SC1e::SendKey("U+007b", {}) ; {

 <^>!SC1f::SendKey("U+0028", {"*^": "U+207d"}) ; (
<^>!+SC1f::SendKey("U+207d", {}) ; ⁽

 <^>!SC20::SendKey("U+0029", {"*^": "U+207e"}) ; )
<^>!+SC20::SendKey("U+207e", {}) ; ⁾

 <^>!SC21::SendKey("U+007d", {}) ; }

 <^>!SC22::SendKey("U+003d", {"**": "U+2260", "*^": "U+207c", "*~": "U+2243"}) ; =
<^>!+SC22::SendKey("U+2243", {}) ; ≃

 <^>!SC23::SendKey("U+005c", {}) ; \

 <^>!SC24::SendKey("U+002b", {"**": "U+00b1", "*^": "U+207a"}) ; +
<^>!+SC24::SendKey("U+00b1", {}) ; ±

 <^>!SC25::SendKey("U+002d", {"**": "U+2014", "*^": "U+207b"}) ; -
<^>!+SC25::SendKey("U+00ac", {}) ; ¬

 <^>!SC26::SendKey("U+002f", {"**": "U+00f7"}) ; /
<^>!+SC26::SendKey("U+00f7", {}) ; ÷

 <^>!SC27::SendKey("U+0022", {}) ; "
<^>!+SC27::SendKey("*¨", {"*¨": "¨"})

;  Letters, third row

 <^>!SC2c::SendKey("U+007e", {}) ; ~
<^>!+SC2c::SendKey("*~", {"*~": "~"})

 <^>!SC2d::SendKey("U+005b", {}) ; [

 <^>!SC2e::SendKey("U+005d", {}) ; ]

 <^>!SC2f::SendKey("U+005f", {}) ; _

 <^>!SC30::SendKey("U+0023", {"**": "U+2019"}) ; #

 <^>!SC31::SendKey("U+007c", {}) ; |
<^>!+SC31::SendKey("U+00a6", {}) ; ¦

 <^>!SC32::SendKey("U+0021", {"**": "U+00a1"}) ; !

 <^>!SC33::SendKey("U+003b", {"**": "U+2022"}) ; ;
<^>!+SC33::SendKey("*¸", {"*¸": "¸"})

 <^>!SC34::SendKey("U+003a", {}) ; :

 <^>!SC35::SendKey("U+003f", {"**": "U+00bf"}) ; ?

;  Pinky keys

;  Space bar

 <^>!SC39::SendKey("U+0020", {"**": "U+2019", "*``": "U+0060", "*´": "U+0027", "*^": "U+005e", "*~": "U+007e", "*¨": "U+0022", "*¸": "U+00b8", "*µ": "U+00b5"}) ;  
<^>!+SC39::SendKey("U+00a0", {"**": "U+2019", "*``": "U+0060", "*´": "U+0027", "*^": "U+005e", "*~": "U+007e", "*¨": "U+0022", "*¸": "U+00b8", "*µ": "U+00b5"}) ;  

; Special Keys

$<^>!Esc::       Send {SC01}
$<^>!End::       Send {SC4f}
$<^>!Home::      Send {SC47}
$<^>!Delete::    Send {SC53}
$<^>!Backspace:: Send {SC0e}


;-------------------------------------------------------------------------------
; Ctrl
;-------------------------------------------------------------------------------

;  Digits

;  Letters, first row

 ^SC10::Send  ^q
^+SC10::Send ^+Q

 ^SC11::Send  ^w
^+SC11::Send ^+W

 ^SC12::Send  ^e
^+SC12::Send ^+E

 ^SC13::Send  ^r
^+SC13::Send ^+R

 ^SC14::Send  ^t
^+SC14::Send ^+T

 ^SC15::Send  ^y
^+SC15::Send ^+Y

 ^SC16::Send  ^u
^+SC16::Send ^+U

 ^SC17::Send  ^i
^+SC17::Send ^+I

 ^SC18::Send  ^o
^+SC18::Send ^+O

 ^SC19::Send  ^p
^+SC19::Send ^+P

;  Letters, second row

 ^SC1e::Send  ^a
^+SC1e::Send ^+A

 ^SC1f::Send  ^s
^+SC1f::Send ^+S

 ^SC20::Send  ^d
^+SC20::Send ^+D

 ^SC21::Send  ^f
^+SC21::Send ^+F

 ^SC22::Send  ^g
^+SC22::Send ^+G

 ^SC23::Send  ^h
^+SC23::Send ^+H

 ^SC24::Send  ^j
^+SC24::Send ^+J

 ^SC25::Send  ^k
^+SC25::Send ^+K

 ^SC26::Send  ^l
^+SC26::Send ^+L

;  Letters, third row

 ^SC2c::Send  ^z
^+SC2c::Send ^+Z

 ^SC2d::Send  ^x
^+SC2d::Send ^+X

 ^SC2e::Send  ^c
^+SC2e::Send ^+C

 ^SC2f::Send  ^v
^+SC2f::Send ^+V

 ^SC30::Send  ^b
^+SC30::Send ^+B

 ^SC31::Send  ^n
^+SC31::Send ^+N

 ^SC32::Send  ^m
^+SC32::Send ^+M

;  Pinky keys

;  Space bar

